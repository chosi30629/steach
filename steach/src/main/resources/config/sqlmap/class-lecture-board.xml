<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.steach.repository.mapper.LectureBoardMapper">
			
	<resultMap id="userMap" type="User">
		<result column="id" property="id"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="phone" property="phone"/>
		<result column="addr" property="addr"/>
		<result column="reg_date" property="regDate"/>
		<result column="profile" property="profile"/>
		<result column="proflie_path" property="profilePath"/>	
	</resultMap>
		
	<resultMap id="lectureMap" type="Lecture">
		<result column="lec_no" property="lecNo"/>
		<result column="class_no" property="classNo"/>
		<result column="subject" property="subject"/>
		<result column="reg_date" property="regDate"/>
		<result column="master" property="master"/>	
	</resultMap>
	
	<resultMap id="lectureBoardMap" type="LectureBoard">
		<result column="board_no" property="boardNo"/>
		<result column="lec_no" property="lecNo"/>
		<result column="g_no" property="gNo"/>
		<result column="p_no" property="pNo"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="reg_date" property="regDate"/>
		<result column="deadline" property="deadline"/>
		<result column="mem_cnt" property="memCnt"/>
		<result column="count" property="count"/>
	
		<collection property="lecture" resultMap="lectureMap"/>
	</resultMap>
	
	<resultMap id="homeworkMap" type="Homework">
		<result column="hw_no" property="hwNo"/>
		<result column="board_no" property="boardNo"/>
		<result column="id" property="id"/>
		<result column="hw_content" property="hwContent"/>
		<result column="reg_date" property="regDate"/>
<!-- 		<collection property="user" resultMap="userMap"/>  -->
		<collection property="user" column="id" ofType="user" select="selectUserById"/> 
	</resultMap>
	
	<select id="selectUserById" resultMap="userMap">
		select name,profile,profile_path
		  from tb_user
		 where id = #{id}
	</select>
	
	<resultMap id="voteListMap" type="VoteList">
		<result column="list_no" property="listNo"/>
		<result column="board_no" property="boardNo"/>
		<result column="select_no" property="selectNo"/>
		<result column="select_name" property="selectName"/>
	</resultMap>
	
	<resultMap id="voteResultMap" type="VoteResult">
		<result column="result_no" property="resultNo"/>
		<result column="board_no" property="boardNo"/>
		<result column="selected_no" property="selectedNo"/>
		<result column="id" property="id"/>
	</resultMap>
	
	
 <!-- 	<select id="selectBoardByClassNo" parameterType="int" resultMap="lectureBoardMap">
		select b.board_no,b.lec_no, b.p_no, b.title, b.content, b.reg_date, b.deadline, b.mem_cnt,l.class_no,l.subject,l.master 
		  from tb_class_lecture_board b,tb_class_lecture l
		 where l.lec_no = b.lec_no
		  and  l.class_no=#{classNo}
		 order by b.reg_date
	</select> 
	 -->
	<!-- 클래스 별 주제 가져오기  -->
	<select id="selectLectureByClassNo" parameterType="int" resultMap="lectureMap">
		select *
		  from tb_class_lecture
		 where class_no =#{classNo}
		order by reg_date desc
	</select>
	
	<!-- 클래스 별 주제의 board 가져오기  -->
	<select id="selectLectureBoardByClassNo" parameterType="int" resultMap="lectureBoardMap">
		select l.class_no,b.board_no,b.lec_no,b.p_no,b.title,b.content,b.reg_date,b.deadline, b.mem_cnt
		  from tb_class_lecture_board b, tb_class_lecture l
		 where l.lec_no = b.lec_no
		   and l.class_no=#{classNo}
		  order by b.reg_date desc
	</select>
	
	<!-- insert Subject -->

	<insert id="insertLecture" parameterType="Lecture">
		insert into tb_class_lecture( 
									class_no,
									subject,
									master
									) values (
												#{classNo},
												#{subject},
												#{master}
															) 
						
	</insert>
	
	<!-- update Subject -->
	<update id="updateLectureSubject" parameterType="Lecture">
		update tb_class_lecture
		   set subject=#{subject}
		 where lec_no=#{lecNo}
	</update>	
	
	<!-- delete Subject -->
	<delete id="deleteLecture" parameterType="int">
		delete from tb_class_lecture
		 where lec_no=#{lecNo}
	</delete>
	
	
	<!--  board 등록  -->
	<insert id="insertLectureBoard" parameterType="LectureBoard" useGeneratedKeys="true" keyProperty="boardNo">
		insert into tb_class_lecture_board(
										   lec_no,
										   p_no,
										   title,
										   content,
										   deadline,
										   mem_cnt
										   ) values(
										   			#{lecNo},
										   			#{pNo},
										   			#{title},
										   			#{content},
										   			#{deadline},
										   			<!-- #{memCnt} -->
										   			(select count(*) from tb_class_member where class_no=#{classNo})
										   						)	
	</insert>
	
	<!-- board 삭제 -->
	<delete id="deleteLectureBoard" parameterType="int">
		delete from tb_class_lecture_board
		 where board_no = #{boardNo}
	
	</delete>
	
	<!-- board 검색 수정폼 데이터 불러오기 -->
	<select id="selectLectureBoardByBNo" parameterType="int" resultMap="lectureBoardMap">
		select board_no,p_no,title,content,deadline,mem_cnt
		  from tb_class_lecture_board
		 where board_no=#{boardNo}
	</select>
	
	<!-- board 수정하기  -->
	<update id="updateLectureBoard" parameterType="LectureBoard">
		update tb_class_lecture_board
		   set  p_no=#{pNo}, title=#{title}, content=#{content},deadline=#{deadline},mem_cnt=#{memCnt}
		 where board_no=#{boardNo}
	</update>
	
	<!-- class 별 투표 조회  -->
 	<select id="selectVoteListByCNo" parameterType="int" resultMap="voteListMap">
	select v.*
		from tb_class_lecture_board_vote_list v, tb_class_lecture_board b, tb_class_lecture l
		where v.board_no=b.board_no
		  and b.lec_no = l.lec_no
		  and l.class_no=#{classNo}
	</select>		
	
	<!-- 클래스별 별 투표자 수 조회~  -->
	<select id="selectVoteCntByCNo" parameterType="int" resultType="CounterVO">
		select b.board_no as boardNo,count(r.id) as count 
		  from tb_class_lecture_board b
		  left join tb_class_lecture_board_vote_result r
		     on b.board_no = r.board_no, tb_class_lecture l
		 where b.lec_no = l.lec_no
		   and l.class_no=#{classNo}
		group by b.board_no
	</select>
	
	
	<!-- 투표 LIST 등록하기~~  -->	
	<insert id="insertVoteList" parameterType="VoteList">
	    insert into tb_class_lecture_board_vote_list(
	    											board_no, 
	    											select_no, 
	    											select_name
	    											)values(
	    													#{boardNo},
	    													#{selectNo},
	    													#{selectName} 
	    																	)
	</insert>
		
	
	
	<!-- 투표 여부 확인 -->
	<select id="selectVoteResultByCNo" parameterType="int" resultMap="voteResultMap">
		select vr.* 
		 from tb_class_lecture_board_vote_result vr, tb_class_lecture_board b, tb_class_lecture l
		 where vr.board_no = b.board_no
		  and b.lec_no = l.lec_no
		  and l.class_no=#{classNo}
	</select> 
	
	<!-- 투표등록하기  -->
	<insert id="insertVote" parameterType="VoteResult">
		insert into tb_class_lecture_board_vote_result(
														board_no,
														selected_no,
														id ) values(
																	#{boardNo},
																	#{selectedNo},
																	#{id}
																				)		
	</insert>
	
	
	<!-- BOARD 별 투표 결과  -->
	<select id="selectVoteResultCountByBNo" parameterType="int" resultType="CounterVO">
		 select l.board_no as boardNo, l.select_no as selectNo, COALESCE(r.count,0) as count
		   from tb_class_lecture_board_vote_list l
		   left outer join (select board_no,selected_no,count(selected_no) as count
		  from tb_class_lecture_board_vote_result
		 where board_no=#{boardNo}
		 group by selected_no) r
		    on l.board_no = r.board_no 
		   and l.select_no = r.selected_no
		  where l.board_no=#{boardNo}
	</select>
	
	<!-- board 별 과제 count  -->
	<select id="selectHWCountByCNo" parameterType="int" resultType="CounterVO">
		select b.board_no as boardNo,count(r.id) as count 
			  from tb_class_lecture_board b
			  left join tb_class_lecture_board_homework r
			     on b.board_no = r.board_no, tb_class_lecture l
			 where b.lec_no = l.lec_no
			   and b.p_no=2
			   and l.class_no=#{classNo}
			group by b.board_no
		
	</select>
	
	
	<!-- homework - count test -->
	<select id="selectHomeworkByCNo" parameterType="int" resultMap="lectureBoardMap">
		select b.*,l.subject,count(*) as count
		  from tb_class_lecture_board b, tb_class_lecture l,tb_class_lecture_board_homework h
		 where b.lec_no=l.lec_no
		   and h.board_no=b.board_no
		   and l.class_no=#{classNo}
		   and b.p_no=2
		   group by h.board_no
	</select>
	
	<select id="selectAllHomeworkByCNo" parameterType="map" resultMap="homeworkMap">
		select u.id, h.board_no, h.hw_no, h.hw_content, h.reg_date
		  from tb_class_member u 
		  left outer join (select *
		                     from tb_class_lecture_board_homework
								  where board_no = #{boardNo}) h  
		    on u.id = h.id	  
		 where u.class_no = #{classNo}
		 order by board_no asc	
	
	</select>

 
 	
	
</mapper>
